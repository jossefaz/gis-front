# Official docker image.
stages :
  - build
  - test
  - deploy

image: docker:latest

services:
  - docker:dind

variables:
    IMAGE_TAG_TEST_GROUP: registry.gitlab.com/gis_manti/gis_front
    IMAGE_TAG_TEST_LOCAL : registry.gitlab.com/yossefaz/gis_front
    IMAGE_TAG_PROD: yossefaz/gis_front:latest

build_docker_image_group:
    stage: build
    script:
      - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
      - docker build -t $IMAGE_TAG_TEST_GROUP -f Dockerfile.dev .
      - docker push $IMAGE_TAG_TEST_GROUP
    only : 
        - group_master
test_react_app_group:
  stage: test
  script:
    - docker kill $(docker ps -q) || true
    - docker rm $(docker ps -a -q) || true
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker run -dt -e CI=true $IMAGE_TAG_TEST_GROUP # TODO : add "npm test -- --coverage" after building tests
    - docker kill $(docker ps -q) || true
  only : 
        - group_master

        
build_docker_image_local :
    stage: build
    script:
      - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
      - docker build -t $IMAGE_TAG_TEST_LOCAL -f Dockerfile.dev .
      - docker push $IMAGE_TAG_TEST_LOCAL
    only : 
        - develop
        - master


test_react_app_local:
  stage: test
  script:
    - docker kill $(docker ps -q) || true
    - docker rm $(docker ps -a -q) || true
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker run -dt -e CI=true $IMAGE_TAG_TEST_GROUP # TODO : add "npm test -- --coverage" after building tests
    - docker kill $(docker ps -q) || true
  only : 
        - group_master
        
build_docker_image_local :
    stage: build
    script:
      - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
      - docker build -t $IMAGE_TAG_TEST_LOCAL -f Dockerfile.dev .
      - docker push $IMAGE_TAG_TEST_LOCAL
    only : 
        - develop
        - master


test_react_app_local:
  stage: test
  script:
    - docker kill $(docker ps -q) || true
    - docker rm $(docker ps -a -q) || true
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker run -dt -e CI=true $IMAGE_TAG_TEST_LOCAL # TODO : add "npm test -- --coverage" after building tests
    - docker kill $(docker ps -q) || true
  only: 
        - develop
        - master





deploy_to_registry:
  stage: deploy
  script:
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASSWORD
    - docker build -t $IMAGE_TAG_PROD .
    - docker push $IMAGE_TAG_PROD
  only:
    - master